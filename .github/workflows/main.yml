name: build-and-push

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/not-alone:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Prepare env file
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: .env-template
          remote_path: ${{ secrets.ENV_PATH }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_port: ${{ secrets.SSH_PORT }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}
      - 
        name: Prepare NGINX config
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: nginx-not-alone.conf
          remote_path: ${{ secrets.NGINX_PATH }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_port: ${{ secrets.SSH_PORT }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}
      - 
        name: Deploying to Lorius
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/ubuntu/docker/not-alone/
            sudo rm .env
            sudo cp ${{ secrets.ENV_PATH }} /home/ubuntu/docker/not-alone/.env
            sudo sed -i 's/V3ry_Str0ng_PASS/${{ secrets.PG_PASS }}/g' .env
            sudo sed -i 's/database/${{ secrets.PG_HOST }}/g' .env
            sudo cp ${{ secrets.NGINX_PATH }} /etc/nginx/sites-available/notalone.conf
            sudo nginx -t && sudo systemctl reload nginx
            if [ "$( docker container inspect -f '{{.State.Running}}' not-alone )" == "true" ]; then docker stop not-alone && docker rm not-alone; fi
            docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/not-alone:latest
            docker run -d \
              --name not-alone \
              --env-file .env \
              --network host \
              --dns 8.8.8.8 \
              -p 3010:3010 \
              -v not-alone-dev_gem_cache:/usr/local/bundle/gems \
              -v not-alone-dev_node_modules:/app/node_modules \
              --restart always \
              ${{ secrets.DOCKERHUB_USERNAME }}/not-alone:latest
            docker ps
            docker container inspect -f '{{.State.Running}}' not-alone
